이중 연결리스트

ㅁ 단방향 연결 리스트의 한계 :
  - 단방향의 순회만이 가능
  - 어떤 노드의 앞에 새로운 노드를 삽입하기 어려움
  - 삭제의 경우에 항상 삭제할 노드의 앞 노드가 필요

ㅁ 이중 연결 리스트
  - 각각의 노드가 다음(next) 노드와 이전(previous) 노드의 주소를 가지는 연결리스트
  - LinkedList 클래스는 첫 번째 노드와 마지막 노드를 참조하는 head(prev == null)
    와 tail(next == null) 필드를 가진다.
  - 양방향 순회가 가능

ㅁ Iterator의 한계
  - 단방향으로만 순회할 수 있다
  - remove() 메서드는 지원하지만 add() 메서드는 지원하지 않는다
  - 항상 리스트의 처음에서 시작한다

    => ListIterator는 Iterator를 확장한다 

ㅁ ListIterator 인터페이스
  - Iterator처럼 ListIterator 역시 개념적으로는 노드와 노드 사이를 가리킨다
  - LinkedList의 위치는 0에서 size 까지의 인덱스로 표현한다.
  