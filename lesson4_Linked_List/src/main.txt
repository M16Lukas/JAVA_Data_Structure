ㅁ 리스트(list)
  - 기본적인 연산 : insert, remove, search 등
  - 대표적인 방법 : 배열, 연결리스트

ㅁ 배열의 단점
  - 크기가 고정 -> reallocation 필요
  - 리스트 중간에 원소를 삽입하거나 삭제할 경우 다수의 데이터 옮겨야

ㅁ 연결리스트
  - 다른 데이터의 이동없이 중간에 삽입이나 삭제가 가능하며
  - 길이 제한이 없음
  - but, 랜덤 엑세스가 불가능

  - 메모리 저장 방식
    | 주소값 | 데이터값 | 다음 데이터의 주소값 |

ㅁ 노드
  - 각각의 노드는 "데이터 필드"와 하나 혹은 그 이상의 "링크 필드"로 구성
  - 링크 필드는 다음 노드를 참조
  - 첫 번째 노드의 주소는 따로 저장해야한다.

ㅁㅁㅁ 주의할 점 ㅁㅁㅁ
> 연결리스트를 다루는 프로그램에서 가장 주의할 점은 내가 작성한 코드가
일반적인 경우만이 아니라 특수한 혹은 극단적인 경우에서도 문제없이 작동하는지
철저히 확인해야한다.

ex) 기존의 연결리스트의 크기가 0인 경우, 즉 head가 null 인 경우에도 문제가 없는지
확인해야 한다.

> 단순 연결리스트에 어떤 노드를 삭제할 때는 삭제할 노드의 바로 앞 노드의 주소가
필요하다. 삭제할 노드의 주소만으로는 삭제할 수 없다.